gplink-1.4.0 #1107 (May  9 2015)
Copyright (c) 1998-2014 gputils project
Listing File Generated: 3-1-2016  21:44:30
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.5 #9473 (Linux)
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"../src/main.c"
                                           	list	p=16f627a
                                           	radix dec
                                           	include "p16f627a.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F627A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; config word(s)
                                           ;--------------------------------------------------------
002007   3f4a     addlw   0x4a             	__config 0x3f4a
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CMCONbits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_PIE1bits
                                           	extern	_PCONbits
                                           	extern	_TXSTAbits
                                           	extern	_EECON1bits
                                           	extern	_VRCONbits
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CMCON
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_PIE1
                                           	extern	_PCON
                                           	extern	_PR2
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_VRCON
                                           	extern	___sdcc_saved_fsr
                                           	extern	__moduchar
                                           	extern	__sdcc_gsinit_startup
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_isr
                                           	global	_wait
                                           	global	_set_duty_cycle
                                           	global	_raise
                                           	global	_fall
                                           	global	_main
                                           	global	_delay
                                           	global	_stat
                                           	global	_delays
                                           
                                           	global PSAVE
                                           	global SSAVE
                                           	global WSAVE
                                           	global STK12
                                           	global STK11
                                           	global STK10
                                           	global STK09
                                           	global STK08
                                           	global STK07
                                           	global STK06
                                           	global STK05
                                           	global STK04
                                           	global STK03
                                           	global STK02
                                           	global STK01
                                           	global STK00
                                           
                                           sharebank udata_ovr 0x0070
                                           PSAVE	res 1
                                           SSAVE	res 1
                                           WSAVE	res 1
                                           STK12	res 1
                                           STK11	res 1
                                           STK10	res 1
                                           STK09	res 1
                                           STK08	res 1
                                           STK07	res 1
                                           STK06	res 1
                                           STK05	res 1
                                           STK04	res 1
                                           STK03	res 1
                                           STK02	res 1
                                           STK01	res 1
                                           STK00	res 1
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           UD_main_0	udata
                                           _delay	res	1
                                           
                                           UD_main_1	udata
                                           _stat	res	1
                                           
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_main_0	udata
                                           r0x100D	res	1
                                           r0x100F	res	1
                                           r0x100E	res	1
                                           r0x1010	res	1
                                           r0x1011	res	1
                                           r0x1012	res	1
                                           r0x1013	res	1
                                           r0x1014	res	1
                                           r0x1015	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           
                                           ID_main_0	idata
                                           _delays
                                           	db	0x01
                                           	db	0x07
                                           	db	0x10
                                           	db	0x20
                                           	db	0x30
                                           	db	0x60
                                           	db	0x90
                                           	db	0xa0
                                           	db	0xc0
                                           	db	0xe0
                                           
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; reset vector 
                                           ;--------------------------------------------------------
                                           STARTUP	code 0x0000
000000   0000     nop                      	nop
                                           	pagesel __sdcc_gsinit_startup
000001   2802     goto    0x0002           	goto	__sdcc_gsinit_startup
                                           ;--------------------------------------------------------
                                           ; interrupt and initialization code
                                           ;--------------------------------------------------------
                                           c_interrupt	code	0x4
                                           __sdcc_interrupt
                                           ;***
                                           ;  pBlock Stats: dbName = I
                                           ;***
                                           ;functions called:
                                           ;   __moduchar
                                           ;   __moduchar
                                           ;4 compiler assigned registers:
                                           ;   r0x100D
                                           ;   STK00
                                           ;   r0x100E
                                           ;   r0x100F
                                           ;; Starting pCode block
                                           S_main__isr	code
                                           _isr:
                                           ; 0 exit points
                                           ;	.line	19; "../src/main.c"	void isr(void) __interrupt (0) {
00009e   00f2     movwf   0x72             	MOVWF	WSAVE
00009f   0e03     swapf   0x03, 0x0        	SWAPF	STATUS,W
0000a0   0183     clrf    0x03             	CLRF	STATUS
0000a1   00f1     movwf   0x71             	MOVWF	SSAVE
0000a2   080a     movf    0x0a, 0x0        	MOVF	PCLATH,W
0000a3   018a     clrf    0x0a             	CLRF	PCLATH
0000a4   00f0     movwf   0x70             	MOVWF	PSAVE
0000a5   0804     movf    0x04, 0x0        	MOVF	FSR,W
0000a6   1283     bcf     0x03, 0x5        	BANKSEL	___sdcc_saved_fsr
0000a7   1703     bsf     0x03, 0x6        
0000a8   00c5     movwf   0x45             	MOVWF	___sdcc_saved_fsr
                                           ;	.line	20; "../src/main.c"	INTCON = 0x00;
0000a9   1283     bcf     0x03, 0x5        	BANKSEL	_INTCON
0000aa   1303     bcf     0x03, 0x6        
0000ab   018b     clrf    0x0b             	CLRF	_INTCON
                                           ;	.line	22; "../src/main.c"	delay = delays[ stat++ % 10 ];
0000ac   1283     bcf     0x03, 0x5        	BANKSEL	_stat
0000ad   1703     bsf     0x03, 0x6        
0000ae   0844     movf    0x44, 0x0        	MOVF	_stat,W
0000af   1283     bcf     0x03, 0x5        	BANKSEL	r0x100D
0000b0   1703     bsf     0x03, 0x6        
0000b1   00b6     movwf   0x36             	MOVWF	r0x100D
0000b2   1283     bcf     0x03, 0x5        	BANKSEL	_stat
0000b3   1703     bsf     0x03, 0x6        
0000b4   0ac4     incf    0x44, 0x1        	INCF	_stat,F
0000b5   300a     movlw   0x0a             	MOVLW	0x0a
0000b6   00ff     movwf   0x7f             	MOVWF	STK00
0000b7   1283     bcf     0x03, 0x5        	BANKSEL	r0x100D
0000b8   1703     bsf     0x03, 0x6        
0000b9   0836     movf    0x36, 0x0        	MOVF	r0x100D,W
                                           	PAGESEL	__moduchar
0000ba   2118     call    0x0118           	CALL	__moduchar
                                           	PAGESEL	$
                                           ;;1	MOVWF	r0x100E
0000bb   3e2c     addlw   0x2c             	ADDLW	(_delays + 0)
0000bc   1283     bcf     0x03, 0x5        	BANKSEL	r0x100D
0000bd   1703     bsf     0x03, 0x6        
0000be   00b6     movwf   0x36             	MOVWF	r0x100D
0000bf   3001     movlw   0x01             	MOVLW	high (_delays + 0)
0000c0   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0000c1   3e01     addlw   0x01             	ADDLW	0x01
0000c2   00b7     movwf   0x37             	MOVWF	r0x100F
0000c3   0836     movf    0x36, 0x0        	MOVF	r0x100D,W
0000c4   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0000c5   1303     bcf     0x03, 0x6        
0000c6   0084     movwf   0x04             	MOVWF	FSR
0000c7   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0000c8   1283     bcf     0x03, 0x5        	BANKSEL	r0x100F
0000c9   1703     bsf     0x03, 0x6        
0000ca   1837     btfsc   0x37, 0x0        	BTFSC	r0x100F,0
0000cb   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0000cc   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0000cd   1303     bcf     0x03, 0x6        
0000ce   0800     movf    0x00, 0x0        	MOVF	INDF,W
0000cf   1283     bcf     0x03, 0x5        	BANKSEL	_delay
0000d0   1703     bsf     0x03, 0x6        
0000d1   00c3     movwf   0x43             	MOVWF	_delay
                                           ;	.line	24; "../src/main.c"	INTCON = 0x90;
0000d2   3090     movlw   0x90             	MOVLW	0x90
0000d3   1283     bcf     0x03, 0x5        	BANKSEL	_INTCON
0000d4   1303     bcf     0x03, 0x6        
0000d5   008b     movwf   0x0b             	MOVWF	_INTCON
0000d6   1283     bcf     0x03, 0x5        	BANKSEL	___sdcc_saved_fsr
0000d7   1703     bsf     0x03, 0x6        
0000d8   0845     movf    0x45, 0x0        	MOVF	___sdcc_saved_fsr,W
0000d9   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0000da   1303     bcf     0x03, 0x6        
0000db   0084     movwf   0x04             	MOVWF	FSR
0000dc   0870     movf    0x70, 0x0        	MOVF	PSAVE,W
0000dd   008a     movwf   0x0a             	MOVWF	PCLATH
0000de   0183     clrf    0x03             	CLRF	STATUS
0000df   0e71     swapf   0x71, 0x0        	SWAPF	SSAVE,W
0000e0   0083     movwf   0x03             	MOVWF	STATUS
0000e1   0ef2     swapf   0x72, 0x1        	SWAPF	WSAVE,F
0000e2   0e72     swapf   0x72, 0x0        	SWAPF	WSAVE,W
                                           END_OF_INTERRUPT
0000e3   0009     retfie                   	RETFIE	
                                           
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_main	code
                                           ;***
                                           ;  pBlock Stats: dbName = M
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   _isr
                                           ;   _raise
                                           ;   _fall
                                           ;   _isr
                                           ;   _raise
                                           ;   _fall
                                           ;; Starting pCode block
                                           S_main__main	code
                                           _main:
                                           ; 2 exit points
                                           ;	.line	55; "../src/main.c"	TRISB = 0xF7; // just RB3 is output
0001b7   30f7     movlw   0xf7             	MOVLW	0xf7
0001b8   1683     bsf     0x03, 0x5        	BANKSEL	_TRISB
0001b9   1303     bcf     0x03, 0x6        
0001ba   0086     movwf   0x06             	MOVWF	_TRISB
                                           ;	.line	58; "../src/main.c"	PR2   = 0x9B;
0001bb   309b     movlw   0x9b             	MOVLW	0x9b
0001bc   0092     movwf   0x12             	MOVWF	_PR2
                                           ;	.line	59; "../src/main.c"	T2CON = 0x05;
0001bd   3005     movlw   0x05             	MOVLW	0x05
0001be   1283     bcf     0x03, 0x5        	BANKSEL	_T2CON
0001bf   1303     bcf     0x03, 0x6        
0001c0   0092     movwf   0x12             	MOVWF	_T2CON
                                           ;	.line	60; "../src/main.c"	CCP1CON = 0x0C;
0001c1   300c     movlw   0x0c             	MOVLW	0x0c
0001c2   0097     movwf   0x17             	MOVWF	_CCP1CON
                                           ;	.line	62; "../src/main.c"	OPTION_REG = 0x40;
0001c3   3040     movlw   0x40             	MOVLW	0x40
0001c4   1683     bsf     0x03, 0x5        	BANKSEL	_OPTION_REG
0001c5   1303     bcf     0x03, 0x6        
0001c6   0081     movwf   0x01             	MOVWF	_OPTION_REG
                                           ;	.line	63; "../src/main.c"	isr();
0001c7   209e     call    0x009e           	CALL	_isr
                                           _00144_DS_:
                                           ;	.line	66; "../src/main.c"	raise();
0001c8   2146     call    0x0146           	CALL	_raise
                                           ;	.line	67; "../src/main.c"	fall();
0001c9   2172     call    0x0172           	CALL	_fall
0001ca   29c8     goto    0x01c8           	GOTO	_00144_DS_
0001cb   0008     return                   	RETURN	
                                           ; exit point of _main
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   _set_duty_cycle
                                           ;   _wait
                                           ;   _set_duty_cycle
                                           ;   _wait
                                           ;9 compiler assigned registers:
                                           ;   r0x1011
                                           ;   r0x1012
                                           ;   r0x1013
                                           ;   r0x1014
                                           ;   r0x1015
                                           ;   r0x1016
                                           ;   r0x1017
                                           ;   r0x1018
                                           ;   r0x1019
                                           ;; Starting pCode block
                                           S_main__fall	code
                                           _fall:
                                           ; 2 exit points
                                           ;	.line	47; "../src/main.c"	while (duty_cycle != 0) {
000172   3064     movlw   0x64             	MOVLW	0x64
000173   1283     bcf     0x03, 0x5        	BANKSEL	r0x1011
000174   1703     bsf     0x03, 0x6        
000175   00ba     movwf   0x3a             	MOVWF	r0x1011
000176   01bb     clrf    0x3b             	CLRF	r0x1012
000177   01bc     clrf    0x3c             	CLRF	r0x1013
000178   01bd     clrf    0x3d             	CLRF	r0x1014
                                           _00135_DS_:
000179   1283     bcf     0x03, 0x5        	BANKSEL	r0x1011
00017a   1703     bsf     0x03, 0x6        
00017b   083a     movf    0x3a, 0x0        	MOVF	r0x1011,W
00017c   043b     iorwf   0x3b, 0x0        	IORWF	r0x1012,W
00017d   043c     iorwf   0x3c, 0x0        	IORWF	r0x1013,W
00017e   043d     iorwf   0x3d, 0x0        	IORWF	r0x1014,W
00017f   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000180   2995     goto    0x0195           	GOTO	_00138_DS_
                                           ;	.line	48; "../src/main.c"	set_duty_cycle(duty_cycle--);
000181   083a     movf    0x3a, 0x0        	MOVF	r0x1011,W
000182   00be     movwf   0x3e             	MOVWF	r0x1015
000183   083b     movf    0x3b, 0x0        	MOVF	r0x1012,W
                                           ;;1	MOVWF	r0x1016
000184   083c     movf    0x3c, 0x0        	MOVF	r0x1013,W
                                           ;;1	MOVWF	r0x1017
000185   083d     movf    0x3d, 0x0        	MOVF	r0x1014,W
                                           ;;1	MOVWF	r0x1018
000186   30ff     movlw   0xff             	MOVLW	0xff
000187   07ba     addwf   0x3a, 0x1        	ADDWF	r0x1011,F
000188   30ff     movlw   0xff             	MOVLW	0xff
000189   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00018a   07bb     addwf   0x3b, 0x1        	ADDWF	r0x1012,F
00018b   30ff     movlw   0xff             	MOVLW	0xff
00018c   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00018d   07bc     addwf   0x3c, 0x1        	ADDWF	r0x1013,F
00018e   30ff     movlw   0xff             	MOVLW	0xff
00018f   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000190   07bd     addwf   0x3d, 0x1        	ADDWF	r0x1014,F
000191   083e     movf    0x3e, 0x0        	MOVF	r0x1015,W
                                           ;;1	MOVWF	r0x1019
000192   21e4     call    0x01e4           	CALL	_set_duty_cycle
                                           ;	.line	49; "../src/main.c"	wait();
000193   2196     call    0x0196           	CALL	_wait
000194   2979     goto    0x0179           	GOTO	_00135_DS_
                                           _00138_DS_:
000195   0008     return                   	RETURN	
                                           ; exit point of _fall
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   _set_duty_cycle
                                           ;   _wait
                                           ;   _set_duty_cycle
                                           ;   _wait
                                           ;9 compiler assigned registers:
                                           ;   r0x1011
                                           ;   r0x1012
                                           ;   r0x1013
                                           ;   r0x1014
                                           ;   r0x1015
                                           ;   r0x1016
                                           ;   r0x1017
                                           ;   r0x1018
                                           ;   r0x1019
                                           ;; Starting pCode block
                                           S_main__raise	code
                                           _raise:
                                           ; 2 exit points
                                           ;	.line	39; "../src/main.c"	while (duty_cycle != 100) {
000146   1283     bcf     0x03, 0x5        	BANKSEL	r0x1011
000147   1703     bsf     0x03, 0x6        
000148   01ba     clrf    0x3a             	CLRF	r0x1011
000149   01bb     clrf    0x3b             	CLRF	r0x1012
00014a   01bc     clrf    0x3c             	CLRF	r0x1013
00014b   01bd     clrf    0x3d             	CLRF	r0x1014
                                           _00118_DS_:
00014c   1283     bcf     0x03, 0x5        	BANKSEL	r0x1011
00014d   1703     bsf     0x03, 0x6        
00014e   083a     movf    0x3a, 0x0        	MOVF	r0x1011,W
00014f   3a64     xorlw   0x64             	XORLW	0x64
000150   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000151   295f     goto    0x015f           	GOTO	_00130_DS_
000152   083b     movf    0x3b, 0x0        	MOVF	r0x1012,W
000153   3a00     xorlw   0x00             	XORLW	0x00
000154   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000155   295f     goto    0x015f           	GOTO	_00130_DS_
000156   083c     movf    0x3c, 0x0        	MOVF	r0x1013,W
000157   3a00     xorlw   0x00             	XORLW	0x00
000158   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000159   295f     goto    0x015f           	GOTO	_00130_DS_
00015a   083d     movf    0x3d, 0x0        	MOVF	r0x1014,W
00015b   3a00     xorlw   0x00             	XORLW	0x00
00015c   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00015d   295f     goto    0x015f           	GOTO	_00130_DS_
00015e   2971     goto    0x0171           	GOTO	_00121_DS_
                                           _00130_DS_:
                                           ;	.line	40; "../src/main.c"	set_duty_cycle(duty_cycle++);
00015f   1283     bcf     0x03, 0x5        	BANKSEL	r0x1011
000160   1703     bsf     0x03, 0x6        
000161   083a     movf    0x3a, 0x0        	MOVF	r0x1011,W
000162   00be     movwf   0x3e             	MOVWF	r0x1015
000163   083b     movf    0x3b, 0x0        	MOVF	r0x1012,W
                                           ;;1	MOVWF	r0x1016
000164   083c     movf    0x3c, 0x0        	MOVF	r0x1013,W
                                           ;;1	MOVWF	r0x1017
000165   083d     movf    0x3d, 0x0        	MOVF	r0x1014,W
                                           ;;1	MOVWF	r0x1018
000166   0aba     incf    0x3a, 0x1        	INCF	r0x1011,F
000167   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000168   0abb     incf    0x3b, 0x1        	INCF	r0x1012,F
000169   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00016a   0abc     incf    0x3c, 0x1        	INCF	r0x1013,F
00016b   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00016c   0abd     incf    0x3d, 0x1        	INCF	r0x1014,F
00016d   083e     movf    0x3e, 0x0        	MOVF	r0x1015,W
                                           ;;1	MOVWF	r0x1019
00016e   21e4     call    0x01e4           	CALL	_set_duty_cycle
                                           ;	.line	41; "../src/main.c"	wait();
00016f   2196     call    0x0196           	CALL	_wait
000170   294c     goto    0x014c           	GOTO	_00118_DS_
                                           _00121_DS_:
000171   0008     return                   	RETURN	
                                           ; exit point of _raise
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;1 compiler assigned register :
                                           ;   r0x100D
                                           ;; Starting pCode block
                                           S_main__set_duty_cycle	code
                                           _set_duty_cycle:
                                           ; 2 exit points
                                           ;;1	MOVWF	r0x100D
                                           ;	.line	33; "../src/main.c"	unsigned char duty_cycle = (char)(duty_cycle_percent << 6 / 25); // duty_cycle_percent * 256 / 100
0001e4   1283     bcf     0x03, 0x5        	BANKSEL	_CCPR1L
0001e5   1303     bcf     0x03, 0x6        
0001e6   0095     movwf   0x15             	MOVWF	_CCPR1L
                                           ;	.line	34; "../src/main.c"	CCPR1L = duty_cycle;
0001e7   0008     return                   	RETURN	
                                           ; exit point of _set_duty_cycle
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;4 compiler assigned registers:
                                           ;   r0x100D
                                           ;   r0x100E
                                           ;   r0x100F
                                           ;   r0x1010
                                           ;; Starting pCode block
                                           S_main__wait	code
                                           _wait:
                                           ; 2 exit points
                                           ;	.line	28; "../src/main.c"	unsigned int i = delay << 5;
000196   1283     bcf     0x03, 0x5        	BANKSEL	_delay
000197   1703     bsf     0x03, 0x6        
000198   0843     movf    0x43, 0x0        	MOVF	_delay,W
000199   1283     bcf     0x03, 0x5        	BANKSEL	r0x100D
00019a   1703     bsf     0x03, 0x6        
00019b   00b6     movwf   0x36             	MOVWF	r0x100D
00019c   01b8     clrf    0x38             	CLRF	r0x100E
00019d   0e38     swapf   0x38, 0x0        	SWAPF	r0x100E,W
00019e   39f0     andlw   0xf0             	ANDLW	0xf0
00019f   00b7     movwf   0x37             	MOVWF	r0x100F
0001a0   0e36     swapf   0x36, 0x0        	SWAPF	r0x100D,W
0001a1   00b9     movwf   0x39             	MOVWF	r0x1010
0001a2   390f     andlw   0x0f             	ANDLW	0x0f
0001a3   04b7     iorwf   0x37, 0x1        	IORWF	r0x100F,F
0001a4   06b9     xorwf   0x39, 0x1        	XORWF	r0x1010,F
0001a5   1003     bcf     0x03, 0x0        	BCF	STATUS,0
0001a6   0db9     rlf     0x39, 0x1        	RLF	r0x1010,F
0001a7   0db7     rlf     0x37, 0x1        	RLF	r0x100F,F
                                           _00109_DS_:
                                           ;	.line	29; "../src/main.c"	while(i--);
0001a8   1283     bcf     0x03, 0x5        	BANKSEL	r0x1010
0001a9   1703     bsf     0x03, 0x6        
0001aa   0839     movf    0x39, 0x0        	MOVF	r0x1010,W
0001ab   00b6     movwf   0x36             	MOVWF	r0x100D
0001ac   0837     movf    0x37, 0x0        	MOVF	r0x100F,W
0001ad   00b8     movwf   0x38             	MOVWF	r0x100E
0001ae   30ff     movlw   0xff             	MOVLW	0xff
0001af   07b9     addwf   0x39, 0x1        	ADDWF	r0x1010,F
0001b0   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0001b1   03b7     decf    0x37, 0x1        	DECF	r0x100F,F
0001b2   0836     movf    0x36, 0x0        	MOVF	r0x100D,W
0001b3   0438     iorwf   0x38, 0x0        	IORWF	r0x100E,W
0001b4   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0001b5   29a8     goto    0x01a8           	GOTO	_00109_DS_
0001b6   0008     return                   	RETURN	
                                           ; exit point of _wait
                                           
                                           
                                           ;	code size estimation:
                                           ;	  156+   28 =   184 instructions (  424 byte)
                                           
                                           	end
